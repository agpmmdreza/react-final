[{"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\index.js":"1","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\App.js":"2","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\store\\auth-context.js":"3","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\pages\\SignInPage.js":"4","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\Drawers\\DrawerUI.js":"5","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\Auth\\SingInForm.js":"6","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\NavBar.js":"7","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\Profile.js":"8","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\TimeTableBells\\TimeTableBells.js":"9","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\TimeTables\\TimeTable.js":"10","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\Dashboards\\Dashboard.js":"11","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\ProfileBar.js":"12","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\TodayClassList.js":"13","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\routes\\DashboardRoutes.js":"14","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Days\\Days.js":"15","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\Table.js":"16","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\hooks\\use-validation.js":"17","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\hooks\\use-fetch.js":"18","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\SnackBar.js":"19","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Users\\Users.js":"20","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Bells\\Bells.js":"21","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Announcements\\Announcements.js":"22","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Courses\\Courses.js":"23","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\StudentAnnouncements.js":"24","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\pages\\LoginPage.js":"25"},{"size":365,"mtime":1625207617584,"results":"26","hashOfConfig":"27"},{"size":1428,"mtime":1625867588400,"results":"28","hashOfConfig":"27"},{"size":3577,"mtime":1625863051728,"results":"29","hashOfConfig":"27"},{"size":537,"mtime":1625570328956,"results":"30","hashOfConfig":"27"},{"size":4038,"mtime":1625908817080,"results":"31","hashOfConfig":"27"},{"size":4961,"mtime":1625838020012,"results":"32","hashOfConfig":"27"},{"size":5753,"mtime":1625602072652,"results":"33","hashOfConfig":"27"},{"size":12868,"mtime":1625908562634,"results":"34","hashOfConfig":"27"},{"size":8035,"mtime":1625911880917,"results":"35","hashOfConfig":"27"},{"size":7951,"mtime":1625911088307,"results":"36","hashOfConfig":"27"},{"size":1978,"mtime":1625916814865,"results":"37","hashOfConfig":"27"},{"size":8255,"mtime":1625912905719,"results":"38","hashOfConfig":"27"},{"size":3025,"mtime":1625852205592,"results":"39","hashOfConfig":"27"},{"size":2719,"mtime":1625868205106,"results":"40","hashOfConfig":"27"},{"size":7135,"mtime":1625911861389,"results":"41","hashOfConfig":"27"},{"size":23666,"mtime":1625918097552,"results":"42","hashOfConfig":"27"},{"size":6031,"mtime":1625906320327,"results":"43","hashOfConfig":"27"},{"size":866,"mtime":1625678827221,"results":"44","hashOfConfig":"27"},{"size":1143,"mtime":1625681070040,"results":"45","hashOfConfig":"27"},{"size":9720,"mtime":1625911905603,"results":"46","hashOfConfig":"27"},{"size":7236,"mtime":1625911804003,"results":"47","hashOfConfig":"27"},{"size":6788,"mtime":1625896097355,"results":"48","hashOfConfig":"27"},{"size":12746,"mtime":1625911844367,"results":"49","hashOfConfig":"27"},{"size":3088,"mtime":1625822835403,"results":"50","hashOfConfig":"27"},{"size":7735,"mtime":1625867929739,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1fyu95f",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\index.js",[],["108","109"],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\App.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\store\\auth-context.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\pages\\SignInPage.js",[],["110","111"],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\Drawers\\DrawerUI.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\Auth\\SingInForm.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\NavBar.js",["112","113","114","115","116","117","118"],"import { AppBar, Toolbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport clsx from 'clsx';\r\nimport { Fragment, useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navbar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  navlist: {\r\n    '& li': {\r\n      margin: '0 1rem',\r\n    },\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    listStyleType: 'none',\r\n    textAlign: 'center',\r\n  },\r\n  menuBg: {\r\n    backgroundColor: '#3D3D3D',\r\n    color: 'white',\r\n    '& .MuiList-padding': {\r\n      padding: '0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      padding: '1.1rem',\r\n      '&:hover': {\r\n        backgroundColor: '#0C77B6',\r\n      },\r\n    },\r\n  },\r\n  textlink: {\r\n    '&:link': {\r\n      color: 'white',\r\n      textDecoration: 'none',\r\n    },\r\n\r\n    '&:visited': {\r\n      color: 'white',\r\n      textDecoration: 'none',\r\n    },\r\n\r\n    '&:hover': {\r\n      color: '#7cf2ee',\r\n      textDecoration: 'none',\r\n    },\r\n\r\n    '&:active': {\r\n      color: 'blue',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const classes = useStyles();\r\n  const authCtx = useContext(AuthContext);\r\n  const logoutHandler = () => {\r\n    setAnchorEl(null);\r\n    authCtx.logout();\r\n  };\r\n\r\n  const accountButtonClickHandler = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const accountButtonCloseHandler = (event) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    authCtx.openDrawer();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position='static'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: authCtx.isDrawerOpen,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.navbar}>\r\n          {/* <ul className={classes.navlist}>\r\n            {authCtx.isLoggedIn ? (\r\n              <Fragment>\r\n                <Fragment>\r\n                  <IconButton\r\n                    color='inherit'\r\n                    onClick={handleDrawerOpen}\r\n                    edge='start'\r\n                    className={clsx(\r\n                      classes.menuButton,\r\n                      authCtx.isDrawerOpen && classes.hide\r\n                    )}\r\n                  >\r\n                    <MenuRounded />\r\n                  </IconButton>\r\n                  <p>{authCtx.navTitle}</p>\r\n                </Fragment>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <li>\r\n                  <Link to='/signin' className={classes.textlink} from='signin'>\r\n                    Sign in\r\n                  </Link>\r\n                </li>\r\n              </Fragment>\r\n            )}\r\n          </ul>\r\n          {authCtx.isLoggedIn && (\r\n            <Fragment>\r\n              <IconButton\r\n                color='inherit'\r\n                aria-label='upload picture'\r\n                component='span'\r\n                onClick={accountButtonClickHandler}\r\n              >\r\n                <AccountCircleRounded\r\n                  style={{ color: 'white', fontSize: 30 }}\r\n                />\r\n              </IconButton>\r\n              <Menu\r\n                classes={{ paper: classes.menuBg }}\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={accountButtonCloseHandler}\r\n              >\r\n                <MenuItem\r\n                  onClick={accountButtonCloseHandler}\r\n                  component={Link}\r\n                  to='/dashboard/profile'\r\n                >\r\n                  <AccountCircleRounded\r\n                    style={{\r\n                      color: 'white',\r\n                      fontSize: 30,\r\n                      marginRight: '0.5rem',\r\n                    }}\r\n                  />\r\n                  Profile\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={accountButtonCloseHandler}\r\n                  component={Link}\r\n                  to='/dashboard'\r\n                >\r\n                  <DashboardRounded\r\n                    style={{\r\n                      color: 'white',\r\n                      fontSize: 30,\r\n                      marginRight: '0.5rem',\r\n                    }}\r\n                  />\r\n                  Dashboard\r\n                </MenuItem>\r\n                <MenuItem onClick={logoutHandler} component={Link} to='/signin'>\r\n                  <ExitToApp\r\n                    style={{\r\n                      color: 'white',\r\n                      fontSize: 30,\r\n                      marginRight: '0.5rem',\r\n                    }}\r\n                  />\r\n                  Logout\r\n                </MenuItem>\r\n              </Menu>\r\n            </Fragment>\r\n          )} */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\Profile.js",["119","120","121","122"],"import {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Divider,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { Fragment, useContext, useEffect, useState } from 'react';\r\nimport {\r\n  ArrowBackIosRounded,\r\n  EditRounded,\r\n  VpnKeyRounded,\r\n} from '@material-ui/icons';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useValidation from '../../hooks/use-validation';\r\nimport CustomSnackBar from './SnackBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    marginTop: '4rem',\r\n  },\r\n  container: {\r\n    backgroundColor: '#454545',\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto auto',\r\n    minHeight: '450px',\r\n    width: '400px',\r\n    borderRadius: '1rem',\r\n  },\r\n  header: {\r\n    boxShadow:\r\n      '0 2.1px 1.9px -9px rgba(0, 0, 0, 0.065), 0 5px 4.4px -9px rgba(0, 0, 0, 0.093), 0 8.9px 7.9px -9px rgba(0, 0, 0, 0.115), 0 14.8px 13.2px -9px rgba(0, 0, 0, 0.135), 0 24.3px 21.7px -9px rgba(0, 0, 0, 0.157), 0 42.5px 37.9px -9px rgba(0, 0, 0, 0.185), 0 92px 82px -9px rgba(0, 0, 0, 0.25) ;',\r\n    background:\r\n      'linear-gradient(-225deg, #2CD8D5 0%, #6B8DD6 48%, #8E37D7 100%);',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '0 0 200px 200px / 50px',\r\n  },\r\n  items: {\r\n    placeSelf: 'center',\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    background: 'linear-gradient(to right, #ee5a6f, #f29263)',\r\n  },\r\n  paper: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 2fr',\r\n    minHeight: '60vh',\r\n    minWidth: '50vw',\r\n  },\r\n  data: {\r\n    padding: '3rem',\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto auto',\r\n  },\r\n}));\r\n\r\nlet response;\r\n\r\nconst Profile = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const authCtx = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [fields, setFields] = useState({\r\n    first: {\r\n      value: '',\r\n      error: false,\r\n      helper: '',\r\n    },\r\n    last: {\r\n      value: '',\r\n      error: false,\r\n      helper: '',\r\n    },\r\n  });\r\n  const [passFields, setPassFields] = useState({\r\n    current: {\r\n      value: '',\r\n      error: false,\r\n      helper: '',\r\n    },\r\n    newPass: {\r\n      value: '',\r\n      error: false,\r\n      helper: '',\r\n    },\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const [isProfileEdited, setIsProfileEdited] = useState(false);\r\n  const [resMessage, setResMessage] = useState('');\r\n\r\n  const {\r\n    fields: newFields,\r\n    handleOnChange,\r\n    handleValidation,\r\n  } = useValidation(fields, setFields);\r\n\r\n  const {\r\n    fields: passwordFields,\r\n    handleOnChange: handleOnChangePass,\r\n    handleValidation: handleValidationPass,\r\n  } = useValidation(passFields, setPassFields);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEditClicked = () => {\r\n    setShowProfile(false);\r\n    setShowEdit(true);\r\n  };\r\n  const handleChangePassClicked = () => {\r\n    setShowProfile(false);\r\n    setShowPass(true);\r\n  };\r\n  const handlePasswordChange = () => {\r\n    if (passFields.current.value !== '' && passFields.newPass.value !== '') {\r\n      fetch(`${authCtx.baseURL}/api/users/profile/changepassword`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          currentPassword: passFields.current.value,\r\n          newPassword: passFields.newPass.value,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${authCtx.token}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((resData) => {\r\n          if (resData.status === 'success') {\r\n            setShowProfile(true);\r\n            setShowPass(false);\r\n            setResMessage('Successfully Changed!');\r\n          } else {\r\n            setResMessage('Something Went Wrong!');\r\n          }\r\n          setOpen(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleEditProfile = () => {\r\n    if (fields.first.value !== '' && fields.last.value !== '') {\r\n      fetch(`${authCtx.baseURL}/api/users/profile`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          firstName: fields.first.value,\r\n          lastName: fields.last.value,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${authCtx.token}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((resData) => {\r\n          if (resData.status === 'success') {\r\n            setShowEdit(false);\r\n            setIsProfileEdited(true);\r\n            setResMessage('Successfully Added!');\r\n          } else {\r\n            setResMessage('Something Went Wrong!');\r\n          }\r\n          setOpen(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(`${authCtx.baseURL}/api/users/profile`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${authCtx.token}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.data != null) {\r\n          response = resData.data;\r\n          setShowProfile(true);\r\n        }\r\n        setIsLoading(false);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isProfileEdited]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper} elevation={5}>\r\n          <div className={classes.avatar}>\r\n            <Avatar\r\n              style={{\r\n                justifySelf: 'center',\r\n                width: '100px',\r\n                height: '100px',\r\n                border: '0.2rem solid lightgray',\r\n                marginTop: '4rem',\r\n              }}\r\n            />\r\n            <div style={{ marginTop: '2.2rem', color: '#eeeeee' }}>\r\n              <h4 style={{ marginBottom: '0.4rem' }}>\r\n                {response && response.firstName.toUpperCase()}\r\n              </h4>\r\n              <h4>{response && response.lastName.toUpperCase()}</h4>\r\n            </div>\r\n          </div>\r\n          {showPass && (\r\n            <div>\r\n              <div style={{ padding: '1.5rem', textAlign: 'left' }}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setShowProfile(true);\r\n                    setShowPass(false);\r\n                  }}\r\n                >\r\n                  <ArrowBackIosRounded />\r\n                </IconButton>\r\n                <h4 style={{ display: 'inline', marginLeft: '.4rem' }}>\r\n                  Change Password\r\n                </h4>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Fragment>\r\n                  <TextField\r\n                    value={passFields.current.value}\r\n                    error={passFields.current.error}\r\n                    helperText={passFields.current.helper}\r\n                    style={{ margin: '2rem 0' }}\r\n                    placeholder='Current Password'\r\n                    name='current'\r\n                    onChange={handleOnChangePass}\r\n                    onBlur={handleValidationPass}\r\n                  />\r\n                  <TextField\r\n                    value={passFields.newPass.value}\r\n                    error={passFields.newPass.error}\r\n                    helperText={passFields.newPass.helper}\r\n                    style={{ marginBottom: '2rem' }}\r\n                    placeholder='Last Name'\r\n                    name='newPass'\r\n                    onChange={handleOnChangePass}\r\n                    onBlur={handleValidationPass}\r\n                  />\r\n                  <Button\r\n                    color='secondary'\r\n                    variant='contained'\r\n                    onClick={handlePasswordChange}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </Fragment>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {showEdit && (\r\n            <div>\r\n              <div style={{ padding: '1.5rem', textAlign: 'left' }}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setShowProfile(true);\r\n                    setShowEdit(false);\r\n                  }}\r\n                >\r\n                  <ArrowBackIosRounded />\r\n                </IconButton>\r\n                <h4 style={{ display: 'inline', marginLeft: '.4rem' }}>\r\n                  Edit Profile\r\n                </h4>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Fragment>\r\n                  <TextField\r\n                    value={fields.first.value}\r\n                    error={fields.first.error}\r\n                    helperText={fields.first.helper}\r\n                    style={{ margin: '2rem 0' }}\r\n                    placeholder='First Name'\r\n                    name='first'\r\n                    onChange={handleOnChange}\r\n                    onBlur={handleValidation}\r\n                  />\r\n                  <TextField\r\n                    value={fields.last.value}\r\n                    error={fields.last.error}\r\n                    helperText={fields.last.helper}\r\n                    style={{ marginBottom: '2rem' }}\r\n                    placeholder='Last Name'\r\n                    name='last'\r\n                    onChange={handleOnChange}\r\n                    onBlur={handleValidation}\r\n                  />\r\n                  <Button\r\n                    color='primary'\r\n                    variant='contained'\r\n                    onClick={handleEditProfile}\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </Fragment>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {showProfile && (\r\n            <div className={classes.data}>\r\n              <Fragment>\r\n                <Fragment>\r\n                  <p\r\n                    style={{\r\n                      textAlign: 'left',\r\n                      marginBottom: '.4rem',\r\n                    }}\r\n                  >\r\n                    Information\r\n                  </p>\r\n                  <Divider />\r\n                </Fragment>\r\n                <div\r\n                  style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: 'auto auto',\r\n                    marginTop: '2rem',\r\n                  }}\r\n                >\r\n                  <div style={{ justifySelf: 'start', marginLeft: '0.8rem' }}>\r\n                    <h5 style={{ textAlign: 'left', marginBottom: '.4rem' }}>\r\n                      Code\r\n                    </h5>\r\n                    <p>{authCtx.userData.code}</p>\r\n                  </div>\r\n                  <div style={{ justifySelf: 'start', marginLeft: '0.8rem' }}>\r\n                    <h5 style={{ textAlign: 'left', marginBottom: '.4rem' }}>\r\n                      Role\r\n                    </h5>\r\n                    <p>{authCtx.userRole.toLowerCase()}</p>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n              <div style={{ marginTop: '7rem', alignSelf: 'end' }}>\r\n                <Button\r\n                  variant='contained'\r\n                  size='small'\r\n                  style={{ background: '#2ecc71', width: '10.8rem' }}\r\n                  onClick={handleEditClicked}\r\n                >\r\n                  <EditRounded style={{ marginRight: '0.3rem' }} />\r\n                  Edit Profile\r\n                </Button>\r\n                <Button\r\n                  variant='contained'\r\n                  size='small'\r\n                  style={{\r\n                    background: '#e74c3c',\r\n                    marginLeft: '1rem',\r\n                    width: '10.8rem',\r\n                  }}\r\n                  onClick={handleChangePassClicked}\r\n                >\r\n                  <VpnKeyRounded style={{ marginRight: '0.3rem' }} />\r\n                  Change Password\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Paper>\r\n      </div>\r\n\r\n      <CustomSnackBar\r\n        open={open}\r\n        handleClose={() => setOpen(false)}\r\n        resMessage={resMessage}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\TimeTableBells\\TimeTableBells.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\TimeTables\\TimeTable.js",["123","124","125"],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\Dashboards\\Dashboard.js",["126"],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\ProfileBar.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\TodayClassList.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\routes\\DashboardRoutes.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Days\\Days.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\Table.js",["127"],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\hooks\\use-validation.js",["128"],"import { useState } from 'react';\r\n\r\nconst useValidation = (fieldsObj, setFieldsObj) => {\r\n  const [fields, setFields] = useState(fieldsObj);\r\n\r\n  const handleOnChange = (event, index) => {\r\n    if (Array.isArray(fieldsObj)) {\r\n      setFieldsObj((prevState) => {\r\n        return prevState.map((item, i) => {\r\n          if (index !== i) {\r\n            return item;\r\n          }\r\n          return {\r\n            ...item,\r\n            [event.target.name]: {\r\n              ...item[event.target.name],\r\n              value: event.target.value,\r\n            },\r\n          };\r\n        });\r\n      });\r\n\r\n      if (event.target.value !== '') {\r\n        setFieldsObj((prevState) => {\r\n          return prevState.map((item, i) => {\r\n            if (index !== i) {\r\n              return item;\r\n            }\r\n            return {\r\n              ...item,\r\n              [event.target.name]: {\r\n                ...item[event.target.name],\r\n                error: false,\r\n                helper: '',\r\n              },\r\n            };\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      setFieldsObj((prevState) => ({\r\n        ...prevState,\r\n        [event.target.name]: {\r\n          ...prevState[event.target.name],\r\n          value: event.target.value,\r\n        },\r\n      }));\r\n      if (event.target.value !== '') {\r\n        setFieldsObj((prevState) => ({\r\n          ...prevState,\r\n          [event.target.name]: {\r\n            ...prevState[event.target.name],\r\n            error: false,\r\n            helper: '',\r\n          },\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleValidation = (event, index) => {\r\n    if (Array.isArray(fieldsObj)) {\r\n      if (event.target.value === '') {\r\n        setFieldsObj((prevState) => {\r\n          return prevState.map((item, i) => {\r\n            if (index !== i) {\r\n              return item;\r\n            }\r\n            return {\r\n              ...item,\r\n              [event.target.name]: {\r\n                ...item[event.target.name],\r\n                error: true,\r\n                helper: 'Enter value!',\r\n              },\r\n            };\r\n          });\r\n        });\r\n      }\r\n      if (fieldsObj[index][event.target.name].type === 'numerical') {\r\n        if (isNaN(event.target.value)) {\r\n          setFieldsObj((prevState) => {\r\n            return prevState.map((item, i) => {\r\n              if (index !== i) {\r\n                return item;\r\n              }\r\n              return {\r\n                ...item,\r\n                code: {\r\n                  ...item.code,\r\n                  error: true,\r\n                  helper: 'Enter a Number!',\r\n                },\r\n              };\r\n            });\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (event.target.value === '') {\r\n        setFieldsObj((prevState) => ({\r\n          ...prevState,\r\n          [event.target.name]: {\r\n            ...prevState[event.target.name],\r\n            error: true,\r\n            helper: 'Enter a value!',\r\n          },\r\n        }));\r\n      }\r\n      if (fields[event.target.name].type === 'numerical') {\r\n        if (isNaN(event.target.value)) {\r\n          setFieldsObj((prevState) => ({\r\n            ...prevState,\r\n            [event.target.name]: {\r\n              ...prevState[event.target.name],\r\n              error: true,\r\n              helper: 'Enter a Number!',\r\n            },\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleOnChange = (event) => {\r\n  //   setFields((prevState) => ({\r\n  //     ...prevState,\r\n  //     [event.target.name]: {\r\n  //       ...prevState[event.target.name],\r\n  //       value: event.target.value,\r\n  //     },\r\n  //   }));\r\n  //   if (event.target.value !== '') {\r\n  //     setFields((prevState) => ({\r\n  //       ...prevState,\r\n  //       [event.target.name]: {\r\n  //         ...prevState[event.target.name],\r\n  //         error: false,\r\n  //         helper: '',\r\n  //       },\r\n  //     }));\r\n  //   }\r\n  // };\r\n\r\n  // const handleValidation = (event) => {\r\n  //   if (event.target.value === '') {\r\n  //     setFields((prevState) => ({\r\n  //       ...prevState,\r\n  //       [event.target.name]: {\r\n  //         ...prevState[event.target.name],\r\n  //         error: true,\r\n  //         helper: 'Enter a value!',\r\n  //       },\r\n  //     }));\r\n  //   }\r\n  //   if (fields[event.target.name].type === 'numerical') {\r\n  //     if (isNaN(event.target.value)) {\r\n  //       setFields((prevState) => ({\r\n  //         ...prevState,\r\n  //         [event.target.name]: {\r\n  //           ...prevState[event.target.name],\r\n  //           error: true,\r\n  //           helper: 'Enter a Number!',\r\n  //         },\r\n  //       }));\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // MAIN PART\r\n  // const handleOnChange = (event) => {\r\n  //   setFieldsObj((prevState) => ({\r\n  //     ...prevState,\r\n  //     [event.target.name]: {\r\n  //       ...prevState[event.target.name],\r\n  //       value: event.target.value,\r\n  //     },\r\n  //   }));\r\n  //   if (event.target.value !== '') {\r\n  //     setFieldsObj((prevState) => ({\r\n  //       ...prevState,\r\n  //       [event.target.name]: {\r\n  //         ...prevState[event.target.name],\r\n  //         error: false,\r\n  //         helper: '',\r\n  //       },\r\n  //     }));\r\n  //   }\r\n  // };\r\n\r\n  // const handleValidation = (event) => {\r\n  //   if (event.target.value === '') {\r\n  //     setFieldsObj((prevState) => ({\r\n  //       ...prevState,\r\n  //       [event.target.name]: {\r\n  //         ...prevState[event.target.name],\r\n  //         error: true,\r\n  //         helper: 'Enter a value!',\r\n  //       },\r\n  //     }));\r\n  //   }\r\n  //   if (fields[event.target.name].type === 'numerical') {\r\n  //     if (isNaN(event.target.value)) {\r\n  //       setFieldsObj((prevState) => ({\r\n  //         ...prevState,\r\n  //         [event.target.name]: {\r\n  //           ...prevState[event.target.name],\r\n  //           error: true,\r\n  //           helper: 'Enter a Number!',\r\n  //         },\r\n  //       }));\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return { handleOnChange, handleValidation };\r\n};\r\n\r\nexport default useValidation;\r\n","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\hooks\\use-fetch.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\SnackBar.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Users\\Users.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Bells\\Bells.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Announcements\\Announcements.js",[],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\RouteComponents\\Courses\\Courses.js",["129"],"C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\components\\UI\\StudentAnnouncements.js",["130"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport { useContext } from 'react';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { Fragment } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nlet response;\r\n\r\nconst StudentAcnnouncements = () => {\r\n  const classes = useStyles();\r\n  const authCtx = useContext(AuthContext);\r\n  const [open, setOpen] = React.useState(true);\r\n  const [showList, setShowList] = React.useState(false);\r\n\r\n  fetch(`${authCtx.baseURL}/api/announcements/studentannouncements`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${authCtx.token}`,\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((resData) => {\r\n      console.log(resData);\r\n      if (resData.data != null && resData.data.length !== 0) {\r\n        response = resData.data;\r\n        setShowList(true);\r\n      } else {\r\n        console.log(resData.message);\r\n      }\r\n    });\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {showList && (\r\n        <List>\r\n          <ListItem button onClick={handleClick}>\r\n            <ListItemIcon>\r\n              <InboxIcon style={{ color: '#FF4500' }} />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Inbox' />\r\n            {open ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse\r\n            in={open}\r\n            timeout='auto'\r\n            unmountOnExit\r\n            style={{ maxHeight: '18rem', overflow: 'auto' }}\r\n          >\r\n            <List component='div' disablePadding>\r\n              {response.map((row) => (\r\n                <ListItem className={classes.nested}>\r\n                  <ListItemAvatar>\r\n                    <Avatar style={{ backgroundColor: '#1C9C24' }}>\r\n                      <ClassIcon style={{ fontSize: '1.3rem' }} />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={row.timeTable.course.title}\r\n                    secondary={row.message}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StudentAcnnouncements;\r\n","C:\\Users\\Mmdreza\\Desktop\\my-project\\src\\pages\\LoginPage.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"131","replacedBy":"135"},{"ruleId":"133","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":18},{"ruleId":"137","severity":1,"message":"141","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":14},{"ruleId":"137","severity":1,"message":"142","line":89,"column":10,"nodeType":"139","messageId":"140","endLine":89,"endColumn":18},{"ruleId":"137","severity":1,"message":"143","line":92,"column":9,"nodeType":"139","messageId":"140","endLine":92,"endColumn":22},{"ruleId":"137","severity":1,"message":"144","line":97,"column":9,"nodeType":"139","messageId":"140","endLine":97,"endColumn":34},{"ruleId":"137","severity":1,"message":"145","line":101,"column":9,"nodeType":"139","messageId":"140","endLine":101,"endColumn":34},{"ruleId":"137","severity":1,"message":"146","line":105,"column":9,"nodeType":"139","messageId":"140","endLine":105,"endColumn":25},{"ruleId":"137","severity":1,"message":"147","line":71,"column":10,"nodeType":"139","messageId":"140","endLine":71,"endColumn":19},{"ruleId":"137","severity":1,"message":"148","line":106,"column":13,"nodeType":"139","messageId":"140","endLine":106,"endColumn":22},{"ruleId":"137","severity":1,"message":"149","line":112,"column":13,"nodeType":"139","messageId":"140","endLine":112,"endColumn":27},{"ruleId":"137","severity":1,"message":"150","line":117,"column":9,"nodeType":"139","messageId":"140","endLine":117,"endColumn":20},{"ruleId":"137","severity":1,"message":"151","line":124,"column":9,"nodeType":"139","messageId":"140","endLine":124,"endColumn":28},{"ruleId":"137","severity":1,"message":"152","line":125,"column":9,"nodeType":"139","messageId":"140","endLine":125,"endColumn":28},{"ruleId":"137","severity":1,"message":"153","line":126,"column":9,"nodeType":"139","messageId":"140","endLine":126,"endColumn":25},{"ruleId":"137","severity":1,"message":"154","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"155","line":33,"column":8,"nodeType":"139","messageId":"140","endLine":33,"endColumn":21},{"ruleId":"137","severity":1,"message":"156","line":4,"column":18,"nodeType":"139","messageId":"140","endLine":4,"endColumn":27},{"ruleId":"137","severity":1,"message":"157","line":83,"column":10,"nodeType":"139","messageId":"140","endLine":83,"endColumn":21},{"ruleId":"137","severity":1,"message":"158","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'anchorEl' is assigned a value but never used.","'logoutHandler' is assigned a value but never used.","'accountButtonClickHandler' is assigned a value but never used.","'accountButtonCloseHandler' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'newFields' is assigned a value but never used.","'passwordFields' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleDeleteClicked' is assigned a value but never used.","'handleUpdateClicked' is assigned a value but never used.","'handleAddClicked' is assigned a value but never used.","'NavBar' is defined but never used.","'useValidation' is defined but never used.","'setFields' is assigned a value but never used.","'showActions' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]